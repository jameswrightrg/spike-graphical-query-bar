{"version":3,"sources":["QueryBar.tsx","utils.ts","App.tsx","index.js"],"names":["AndOr","QueryBarInput","value","className","map","e","toJsxElement","element","type","And","title","QueryBar","useState","query","setQuery","toQueryBarElementsFromSobs","s","toQueryBarElementsFromSob","reduce","a","b","concat","split","p","components","toLowerCase","Or","valid","toQueryBarElement","queryBarElements","interpretedQuery","interpretBrackets","input","length","result","buffer","nestedLevel","i","push","console","log","toQueryBarElementsFromString","onChange","currentTarget","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a0940ef.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./QueryBar.css\";\r\nimport { interpretBrackets, StringOrBracketedString } from \"./utils\";\r\n\r\nenum AndOr {\r\n  And,\r\n  Or,\r\n}\r\n\r\ntype QueryBarInputElement =\r\n  | { type: \"AndOrSelector\"; value: AndOr }\r\n  | { type: \"Brackets\"; value: QueryBarInputElement[] }\r\n  | { type: \"Table\"; value: string; valid: boolean }\r\n  | { type: \"Column\"; value: string }\r\n  | { type: \"Server\"; value: string }\r\n  | { type: \"Database\"; value: string }\r\n  | { type: \"Schema\"; value: string }\r\n  | { type: \"Tag\"; value: string }\r\n  | { type: \"string\"; value: string };\r\n\r\ninterface QueryBarInputProps {\r\n  value: QueryBarInputElement[];\r\n}\r\nfunction QueryBarInput({ value }: QueryBarInputProps) {\r\n  const toJsxElement = (element: QueryBarInputElement): JSX.Element => {\r\n    switch (element.type) {\r\n      case \"Brackets\":\r\n        return (\r\n          <div className=\"brackets\">\r\n            {element.value.map((e) => toJsxElement(e))}\r\n          </div>\r\n        );\r\n      case \"AndOrSelector\":\r\n        return (\r\n          <span className=\"andor-selector\">\r\n            {element.value === AndOr.And ? \"AND\" : \"OR\"}\r\n          </span>\r\n        );\r\n      case \"Table\":\r\n        return (\r\n          <span className=\"table-pill pill\" title=\"Table\">\r\n            {element.value}\r\n          </span>\r\n        );\r\n      case \"Server\":\r\n        return (\r\n          <span className=\"instance-pill pill\" title=\"Server/Instance\">\r\n            {element.value}\r\n          </span>\r\n        );\r\n      case \"Database\":\r\n        return (\r\n          <span className=\"database-pill pill\" title=\"Database\">\r\n            {element.value}\r\n          </span>\r\n        );\r\n      case \"Schema\":\r\n        return (\r\n          <span className=\"schema-pill pill\" title=\"Schema\">\r\n            {element.value}\r\n          </span>\r\n        );\r\n      case \"Column\":\r\n        return (\r\n          <span\r\n            className=\"column-name-pattern-pill pill\"\r\n            title=\"Column/Pattern\"\r\n          >\r\n            {element.value}\r\n          </span>\r\n        );\r\n      case \"Tag\":\r\n        return (\r\n          <span className=\"tag-pill pill\" title=\"Tag\">\r\n            {element.value}\r\n          </span>\r\n        );\r\n      case \"string\":\r\n        return <span title=\"String\">{element.value}</span>;\r\n      default:\r\n        return <span />;\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"custom-input\">{value.map((e) => toJsxElement(e))}</div>\r\n  );\r\n}\r\n\r\nfunction QueryBar() {\r\n  const [query, setQuery] = useState<string>(\r\n    \"(instance:instances.spawn.cc% AND database:Sales% AND schema:CUST% AND table:Details AND column:%name%) or column:%customername% or tag:Name\"\r\n  );\r\n\r\n  const toQueryBarElement = (element: string): QueryBarInputElement => {\r\n    const components = element.split(\":\");\r\n    const type = components[0].toLowerCase();\r\n    switch (type) {\r\n      case \"and\":\r\n        return { type: \"AndOrSelector\", value: AndOr.And };\r\n      case \"or\":\r\n        return { type: \"AndOrSelector\", value: AndOr.Or };\r\n      case \"table\":\r\n        return { type: \"Table\", value: components[1], valid: true };\r\n      case \"schema\":\r\n        return { type: \"Schema\", value: components[1] };\r\n      case \"server\":\r\n      case \"instance\":\r\n        return { type: \"Server\", value: components[1] };\r\n      case \"database\":\r\n        return { type: \"Database\", value: components[1] };\r\n      case \"pattern\":\r\n      case \"column\":\r\n        return { type: \"Column\", value: components[1] };\r\n      case \"tag\":\r\n        return { type: \"Tag\", value: components[1] };\r\n      default:\r\n        return { type: \"string\", value: element };\r\n    }\r\n  };\r\n  const toQueryBarElementsFromString = (\r\n    query: string\r\n  ): QueryBarInputElement[] => {\r\n    const interpretedQuery = interpretBrackets(query);\r\n    console.log(interpretedQuery);\r\n    return toQueryBarElementsFromSobs(interpretedQuery);\r\n  };\r\n\r\n  const toQueryBarElementsFromSobs = (\r\n    query: StringOrBracketedString[]\r\n  ): QueryBarInputElement[] => {\r\n    return query\r\n      .map((s) => toQueryBarElementsFromSob(s))\r\n      .reduce(function (a, b) {\r\n        return a.concat(b);\r\n      });\r\n  };\r\n\r\n  const toQueryBarElementsFromSob = (\r\n    query: StringOrBracketedString\r\n  ): QueryBarInputElement[] => {\r\n    switch (query.type) {\r\n      case \"string\":\r\n        return query.value.split(\" \").map((p) => toQueryBarElement(p));\r\n      case \"bracketed-string\":\r\n        return [\r\n          { type: \"Brackets\", value: toQueryBarElementsFromSobs(query.value) },\r\n        ];\r\n    }\r\n  };\r\n\r\n  const queryBarElements = toQueryBarElementsFromString(query);\r\n  return (\r\n    <div className=\"field\">\r\n      <input\r\n        value={query}\r\n        onChange={(e) => setQuery(e.currentTarget.value)}\r\n        placeholder=\"Enter query here\"\r\n      ></input>\r\n      <QueryBarInput value={queryBarElements} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QueryBar;\r\n","export type StringOrBracketedString =\r\n  | { type: \"string\"; value: string }\r\n  | { type: \"bracketed-string\"; value: StringOrBracketedString[] };\r\n\r\nexport const interpretBrackets = (input: string): StringOrBracketedString[] => {\r\n  const length = input.length;\r\n\r\n  var result: StringOrBracketedString[] = [];\r\n\r\n  var buffer = \"\";\r\n  var nestedLevel = 0;\r\n  for (var i = 0; i < length; i++) {\r\n    if (input[i] === \"(\") {\r\n      if (nestedLevel === 0) {\r\n        result.push({ type: \"string\", value: buffer });\r\n        buffer = \"\";\r\n      } else {\r\n        buffer += input[i];\r\n      }\r\n      nestedLevel++;\r\n    } else if (input[i] === \")\") {\r\n      if (nestedLevel === 1) {\r\n        result.push({\r\n          type: \"bracketed-string\",\r\n          value: interpretBrackets(buffer),\r\n        });\r\n        buffer = \"\";\r\n      } else {\r\n        buffer += input[i];\r\n      }\r\n      if (nestedLevel >= 1) {\r\n        nestedLevel--;\r\n      }\r\n    } else {\r\n      buffer += input[i];\r\n    }\r\n  }\r\n  if (nestedLevel === 0) {\r\n    result.push({ type: \"string\", value: buffer });\r\n  } else {\r\n    result.push({ type: \"bracketed-string\", value: interpretBrackets(buffer) });\r\n  }\r\n\r\n  return result;\r\n};\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport QueryBar from \"./QueryBar\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <QueryBar />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}